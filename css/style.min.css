body.active{overflow:hidden}.container{max-width:1080px}.header-block.active{background:#fff;width:100vw;height:100vh;position:fixed}.header-row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:18px 0}.header-row.active{display:block}.header-row.active .header-text{text-align:right}.header-menu,.header-row{display:-webkit-box;display:-ms-flexbox;display:flex}.header-menu a :hover,.main-title span{color:#fec503}.header-menu li{font:400 16px/130% "Open Sans";color:#242424;margin:0 20px 0 0}.header-menu :nth-child(3){margin:0}.header-menu.active{display:block}.header-menu.active li{font-size:32px}.header-burger{display:none;position:absolute;top:35px;right:35px;cursor:pointer}.header-burger div{width:20px;height:3px;background:#000;margin:0 0 3px}.header-burger.active :nth-child(2){display:none}.header-burger.active :nth-child(1){-webkit-transform:rotate(45deg) translateY(4px);-ms-transform:rotate(45deg) translateY(4px);transform:rotate(45deg) translateY(4px);margin:3px 0 0 3px}.header-burger.active :nth-child(3){-webkit-transform:rotate(-45deg) translateY(-4px);-ms-transform:rotate(-45deg) translateY(-4px);transform:rotate(-45deg) translateY(-4px);margin:3px 0 0 3px}.main{background:url(../img/bg.png) no-repeat 0 0/cover;height:770px}.main__button,.main__button-block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:66px 0 0}.main__button-block{padding:8px 50px 10px;gap:10px;width:240px;height:60px;background:#fec503;border-radius:100px}.main__button-title{font:500 20px/130% "Rubik";text-align:center;color:#242424}.main-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.main-row{width:882px}.main-title{font:600 52px/130% "Rubik";text-transform:uppercase;color:#fff;padding:220px 0 0}.benefit__item-img,.main-title{text-align:center}.benefit__item-title{font:500 20px/130% "Rubik";text-align:center;color:#242424}.benefit__item-subtitle{font:400 16px/130% "Open Sans";text-align:center;color:#808386}.benefit-block{max-width:882px}.benefit-title{font:500 40px/130% "Rubik";text-align:center;text-transform:uppercase;color:#242424;padding:100px 0 80px}.benefit-items{padding:0 0 100px}.benefit__item-img1{padding:0 0 26.6px}.benefit__item-img2{padding:0 0 20px}.benefit__item-img3{padding:52px 0 22px}.benefit__item-img4{padding:56.9px 0 26.9px}.portfolio{background:#000}.portfolio-title{font:500 40px/130% "Rubik";text-align:center;text-transform:uppercase;color:#fff;padding:100px 0 80px}.gallery{text-align:center;padding:0 0 0 10px}.gallery__item{display:-webkit-box;display:-ms-flexbox;display:flex}.gallery__first_big{margin:0 0 10px -11px}.gallery__first_small{display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;grid-template-columns:repeat(2,257px);grid-template-rows:repeat(2,1fr);gap:10px;margin:0 0 10px 11px}.gallery__second_big{margin:0 0 0 11px}.gallery__second_small{display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;grid-template-columns:repeat(2,257px);grid-template-rows:repeat(2,1fr);gap:10px;margin:0 0 10px -11px}.portfolio-more{text-align:center;margin:0 0 0 -15px;padding:40px 0 103px}.about-contact a,.portfolio-more a{font:400 16px/130% "Open Sans";color:#fff}.portfolio__arrow{margin:3px 0 0 10px}.about-row{display:-webkit-box;display:-ms-flexbox;display:flex;padding:100px 0}.about-image{padding:0 45px 0 0}.about-title{font:500 40px/130% "Rubik";text-transform:uppercase;color:#242424;padding-bottom:30px}.about-subtitle{font:400 16px/130% "Open Sans";color:#808386;padding-bottom:30px}.about-subtitle span{display:block;margin:20px 0}.about-contact a{color:#242424}.about-arrow{margin:3px 0 0 10px}.footer{background:#000}.footer-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:26px 0}.footer-text{font:400 14px/130% "Open Sans";color:#808386}@supports (-webkit-appearance:none){.main{background-image:url(../img/bg.webp)}}@media (max-width:1439px){.gallery__item{display:block}.gallery__first_big,.gallery__first_small{margin:0 0 10px}.gallery__second_big{margin:0}.gallery__second_small{margin:0 0 10px}}@media (max-width:1080px){.main{height:calc(500px + 270*(100vw - 320px)/760)}.main-title{font-size:calc(30px + 22*(100vw - 320px)/760);padding:calc(100px + 120*(100vw - 320px)/760) 0 0}}@media (max-width:1050px){.about-text{padding:0 0 0 30px}}@media (max-width:992px){.about-text{padding:0}}@media (max-width:768px){.benefit__item-img2{padding:56.9px 0 20px}}@media (max-width:767px){.header-menu{display:none}.header-burger{display:block}}@media (max-width:550px){.gallery__item img{width:80%;margin-bottom:10px}.gallery__first_big{margin:0}.gallery__first_small{margin:0;display:block}.gallery__second_big{display:none}.gallery__second_small{margin:0;display:none}.about-image{padding:0}.about-image img{width:100%}}@media (max-width:445px){.footer-text{padding:0 0 0 15px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */